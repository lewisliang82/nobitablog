<?php
/**
 * Created by PhpStorm.
 * User: nobita
 * Date: 2018/12/6
 * Time: 下午9:02
 */

namespace app\admin\controller;

use app\common\model\Category as CategoryModel;
use app\common\model\Attachment as AttachmentModel;
use think\Controller;
use think\Session;
use think\Request;
use think\View;

class Base extends Controller
{
    public $_N;
    protected $userResult;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //read userinfo
        $this->userResult = Session::get('user');
        $session = $this->userResult['group'];
        if (!$session){
            $this->redirect('/admin/login');
            return false;
        }
//        if ($session == 3){
//            $this->redirect('/');
//            return false;
//        }
        //视图实例化，冲定义模板路径
        $this->view = new View([
            'type'          => 'php',
            'view_path'     => './theme/adminv2/',
            'view_suffix'   => 'php',
            'view_depr'     => '/',
        ]);
        if(!defined('__THEME__')){
            define('__THEME__','./theme/adminv2');
            define('__PUBLIC__','/theme/adminv2');
        }
        $this->_N['userInfo'] = Session::get('user');
        $navBar = $this->navBar();
        $this->assign([
            'userData' => $this->_N['userInfo'],
            'navBar' => $navBar
        ]);
    }

    public function userId(){
        $userId = $this->userResult['id'];
        return $userId;
    }

    public function userCategory(){
        $GetCategoryAll = CategoryModel::where('user_id',$this->userId())
            ->where('del',0)
            ->select();
        return $GetCategoryAll;
    }

    public function categoryTree($data,$parentid=0,$deep=0){
        static $tree = array();
        foreach ($data as $rows){
            if ($rows['parent_id'] == $parentid){
                $rows['deep'] = $deep;
                $tree[] = $rows;
                self::categoryTree($data,$rows['id'],$deep+1);
            }
        }
        return $tree;
    }

    public function processingCategory($data){
        $category = [];
        foreach($data as $v){
            $category[$v['id']] = $v['title'];
            $category[$v['slug']] = $v['title'];
        }
        return $category;
    }

    public function getCategory(){
        $GetCategoryAll = CategoryModel::where('user_id',$this->userId())
            ->where('del',0)
            ->select();
        $res = $this->categoryTree($GetCategoryAll);
        $categoryList['list'] = $GetCategoryAll;
        $categoryList['item'] = $this->processingCategory($res);
        return $categoryList;
    }

    public function navBar() {
        $this->userResult = Session::get('user');
        $session = $this->userResult['group'];
        if ($session == 1){
        return [
            [
                ['home', '/admin', '<i class="icon-home"></i> 仪表盘']
            ],
            [
                ['article', '/admin/center', '<i class="icon-home"></i> 创作中心']
            ],
            [
                ['write', '/admin/article/write', '<i class="icon-pencil-case"></i> 编写创作']
            ],
            [
                ['page', '/admin/page', '<i class="icon-page"></i> 页面管理']
            ],
            [
                ['comment', '/admin/comment', '<i class="icon-mail"></i> 评论管理']
            ],
            [
                ['bookmark', '/admin/bookmark', '<i class="icon-bill"></i> 收藏中心']
            ],
            [
                ['links', '/admin/links', '<i class="fa fa-external-link"></i> 友情链接']
            ],
            [
                ['category', '/admin/category', '<i class="icon-pencil-case"></i> 创作分类']
            ],
            [
                ['visitor', '/admin/visitor', '<i class="icon-line-chart"></i> 访客管理']
            ],
            [
                ['trash', '/admin/trash', '<i class="icon-flask"></i> 回收的箱']
            ],
            [
                ['setting', '/admin/setting', '<i class="icon-list-1"></i> 网站设置']
            ]
        ];
        }else{
            return [
                [
                    ['home', '/admin', '<i class="icon-home"></i> 仪表盘']
                ],
                [
                    ['article', '/admin/center', '<i class="icon-home"></i> 创作中心']
                ],
                [
                    ['write', '/admin/article/write', '<i class="icon-pencil-case"></i> 编写创作']
                ],
                [
                    ['comment', '/admin/comment', '<i class="icon-mail"></i> 评论管理']
                ],
                [
                    ['bookmark', '/admin/bookmark', '<i class="icon-bill"></i> 收藏中心']
                ],
                [
                    ['category', '/admin/category', '<i class="icon-pencil-case"></i> 创作分类']
                ],
                [
                    ['trash', '/admin/trash', '<i class="icon-flask"></i> 回收的箱']
                ]
            ];
        }
    }

    public function getGravatar($email) {
        /**
         * 修改这个函数 收到$email 先md5，检测本地是否存在缓存过的文件，如果存在 直接返回本地的地址
         * 如果不存在 file_get_contens得到图片资源后，file_put_contents缓存下来，然后还是返回本地的地址
         */
        $id = md5(strtolower(trim($email)));
        $filePath = './avatar/';
        $fileName = $filePath.$id.'.jpg';
        if(!is_file($fileName)){
            //缓存不存在
            if(!is_dir($filePath)){
                mkdir($filePath);
            }
            $url = 'http://secure.gravatar.com/avatar/'.$id;
            $res = file_get_contents($url);
            if(!file_put_contents($fileName,$res)){
                return '//secure.gravatar.com/avatar/'.$id;
            }
        }
        return '/avatar/'.$id.'.jpg?5';
    }

    public function state($result){
        if ($result){
            echo 1;
        }else{
            echo 2;
        }
    }

    public function tip($msg){
        return $msg;
    }

    public function upload(Request $request){
        // 获取表单上传文件
        //$file = $request->file('file');
        $file = \think\Image::open(request()->file('editormd-image-file'));
        $dirTime = iconv("UTF-8", "GBK", ROOT_PATH . 'public' . DS . 'upload/'.$this->userId().'/images/'.date('Ym',time()));
        if (file_exists($dirTime));
        else
            mkdir ($dirTime,0777,true);
        $fileUrl = $dirTime. DS .md5(time()).'.jpg';
        $width = $file->width();
        if ($width >= 2048){
            $result = $file->thumb(1920,1080)->save($fileUrl);
        }else{
            $result = $file->save($fileUrl);
        }
        if ($result) {
            $faceurl = strstr($fileUrl,"/upload");
            $resultJson = array(
                'success'=>1,
                'message'=>'上传成功啦!',
                'url'=>'https://199508.com'.$faceurl
            );
            return json_encode($resultJson);
        } else {
            // 上传失败获取错误信息
            $this->error($file->getError());
        }
    }

}